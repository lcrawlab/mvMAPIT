// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// MAPIT_CisTrans
Rcpp::List MAPIT_CisTrans(arma::mat X, arma::vec y, Rcpp::List regions, bool useCis, int cores);
RcppExport SEXP _MAPIT_MAPIT_CisTrans(SEXP XSEXP, SEXP ySEXP, SEXP regionsSEXP, SEXP useCisSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type regions(regionsSEXP);
    Rcpp::traits::input_parameter< bool >::type useCis(useCisSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(MAPIT_CisTrans(X, y, regions, useCis, cores));
    return rcpp_result_gen;
END_RCPP
}
// MvMAPITCpp
Rcpp::List MvMAPITCpp(arma::mat X, arma::vec y1, arma::vec y2, Rcpp::Nullable<Rcpp::NumericMatrix> Z, Rcpp::Nullable<Rcpp::NumericMatrix> C, Rcpp::Nullable<Rcpp::NumericVector> variantIndices, std::string testMethod, int cores, Rcpp::Nullable<Rcpp::NumericMatrix> GeneticSimilarityMatrix);
RcppExport SEXP _MAPIT_MvMAPITCpp(SEXP XSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP ZSEXP, SEXP CSEXP, SEXP variantIndicesSEXP, SEXP testMethodSEXP, SEXP coresSEXP, SEXP GeneticSimilarityMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type C(CSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type variantIndices(variantIndicesSEXP);
    Rcpp::traits::input_parameter< std::string >::type testMethod(testMethodSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type GeneticSimilarityMatrix(GeneticSimilarityMatrixSEXP);
    rcpp_result_gen = Rcpp::wrap(MvMAPITCpp(X, y1, y2, Z, C, variantIndices, testMethod, cores, GeneticSimilarityMatrix));
    return rcpp_result_gen;
END_RCPP
}
// MAPITCpp
Rcpp::List MAPITCpp(arma::mat X, arma::vec y, Rcpp::Nullable<Rcpp::NumericMatrix> Z, Rcpp::Nullable<Rcpp::NumericMatrix> C, Rcpp::Nullable<Rcpp::NumericVector> variantIndices, std::string testMethod, int cores, Rcpp::Nullable<Rcpp::NumericMatrix> GeneticSimilarityMatrix);
RcppExport SEXP _MAPIT_MAPITCpp(SEXP XSEXP, SEXP ySEXP, SEXP ZSEXP, SEXP CSEXP, SEXP variantIndicesSEXP, SEXP testMethodSEXP, SEXP coresSEXP, SEXP GeneticSimilarityMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type C(CSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type variantIndices(variantIndicesSEXP);
    Rcpp::traits::input_parameter< std::string >::type testMethod(testMethodSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type GeneticSimilarityMatrix(GeneticSimilarityMatrixSEXP);
    rcpp_result_gen = Rcpp::wrap(MAPITCpp(X, y, Z, C, variantIndices, testMethod, cores, GeneticSimilarityMatrix));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP run_testthat_tests();

static const R_CallMethodDef CallEntries[] = {
    {"_MAPIT_MAPIT_CisTrans", (DL_FUNC) &_MAPIT_MAPIT_CisTrans, 5},
    {"_MAPIT_MvMAPITCpp", (DL_FUNC) &_MAPIT_MvMAPITCpp, 9},
    {"_MAPIT_MAPITCpp", (DL_FUNC) &_MAPIT_MAPITCpp, 8},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_MAPIT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
